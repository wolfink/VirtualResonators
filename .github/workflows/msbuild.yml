name: MSBuild

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .\Builds\VisualStudio2019\VirtualResonators.sln
  
  # Projucer path relative to the root of the project
  PROJUCER_SOLUTION_FILE_PATH: .\JUCE\extras\Projucer\Builds\VisualStudio2019
  PROJUCER_EXE_FILE_PATH: PROJUCER_SOLUTION_FILE_PATH\x64\Release\Projucer.exe

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Get Dependencies
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: git clone https://github.com/juce-framework/JUCE.git && git clone https://github.com/jcredland/juce-toys.git
      
    - name: Build Projucer
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=Release ${{env.PROJUCER_SOLUTION_FILE_PATH}}
      
    - name: Set User Modules path
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: ${{env.PROJUCER_EXE_FILE_PATH}} --set-global-search-path windows defaultUserModulePath .
      
    - name: Generate solution file
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: ${{env.PROJUCER_EXE_FILE_PATH}} --resave VirtualResonators.jucer

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
